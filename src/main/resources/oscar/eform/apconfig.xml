<eformap-config>

<!-- Date information -->
    <databaseap>
        <ap-name>today</ap-name>
        <ap-sql>SELECT curdate()</ap-sql>
        <ap-output>${curdate()}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>appt_date</ap-name>
        <ap-sql>SELECT appointment_date from appointment WHERE appointment_no=${appt_no}</ap-sql>
        <ap-output>${appointment_date}</ap-output>
    </databaseap>
   <databaseap>
        <ap-name>next_appt_date</ap-name>
        <ap-sql>SELECT appointment_date, start_time from appointment WHERE demographic_no = ${demographic} AND `status` NOT IN('C', 'N', 'NS') AND appointment_date >= CURDATE( )
                  ORDER BY appointment_date LIMIT 1 </ap-sql>
        <ap-output>${appointment_date}, ${start_time}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>next_appt_time</ap-name>
        <ap-sql>SELECT LEFT(start_time,5) AS start_time from appointment WHERE demographic_no = ${demographic} AND `status` NOT IN('C', 'N', 'NS') AND appointment_date >= CURDATE( )
                  ORDER BY appointment_date LIMIT 1 </ap-sql>
        <ap-output>${start_time}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>nextf_appt_date</ap-name>
        <ap-sql>SELECT DATE_FORMAT(appointment_date, '%Y-%b-%d' ) as nextf_appt_date from appointment WHERE demographic_no = ${demographic} AND `status` NOT IN('C', 'N', 'NS') AND appointment_date >= CURDATE( )
                  ORDER BY appointment_date LIMIT 1 </ap-sql>
        <ap-output>${nextf_appt_date}</ap-output>
    </databaseap>

<!-- Current user information -->
    <databaseap>
        <ap-name>current_user</ap-name>
        <ap-sql>SELECT provider.first_name, provider.last_name FROM provider WHERE provider.provider_no='${provider}' </ap-sql>
        <ap-output>${last_name}, ${first_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>current_user_ohip_no</ap-name>
        <ap-sql>SELECT provider.ohip_no FROM provider WHERE provider.provider_no='${provider}' </ap-sql>
        <ap-output>${ohip_no}</ap-output>
    </databaseap>
     <databaseap>
        <ap-name>current_user_specialty_code</ap-name>
        <ap-sql>SELECT
                 MID( comments,
                       INSTR(comments,'&lt;xml_p_specialty_code&gt;')+22,
                       INSTR(comments,'&lt;/xml_p_specialty_code&gt;')-INSTR(comments,'&lt;xml_p_specialty_code&gt;')-22
                 ) AS specialty_code
               FROM provider WHERE provider_no='${provider}' </ap-sql>
        <ap-output>${specialty_code}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>current_user_cpsid</ap-name>
        <ap-sql>SELECT provider.practitionerNo FROM provider WHERE provider.provider_no='${provider}' </ap-sql>
        <ap-output>${practitionerNo}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>current_user_id</ap-name>
        <ap-sql>SELECT '${provider}' AS id</ap-sql>
        <ap-output>${id}</ap-output>
    </databaseap>
    
	<databaseap>
		<ap-name>current_logged_in_user</ap-name>
		<ap-sql>SELECT provider.first_name, provider.last_name FROM provider WHERE provider.provider_no='${loggedInProvider}' </ap-sql>
		<ap-output>${last_name}, ${first_name}</ap-output>
	</databaseap>
	<databaseap>
		<ap-name>current_logged_in_user_roles</ap-name>
		<ap-sql>SELECT group_concat(role_name) as roles FROM secUserRole where provider_no='${loggedInProvider}'</ap-sql>
		<ap-output>${roles}</ap-output>
	</databaseap>
	<databaseap>
		<ap-name>current_logged_in_user_type</ap-name>
		<ap-sql>SELECT provider_type FROM provider where provider_no='${loggedInProvider}'</ap-sql>
		<ap-output>${provider_type}</ap-output>
	</databaseap>
	<databaseap>
		<ap-name>current_logged_in_user_id</ap-name>
		<ap-sql>SELECT '${loggedInProvider}' as id </ap-sql>
		<ap-output>${id}</ap-output>
	</databaseap>
    

<!-- Patient demographic information -->
    <databaseap>
        <ap-name>patient_name</ap-name>
        <ap-sql>SELECT * FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${last_name}, ${first_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>first_last_name</ap-name>
        <ap-sql>SELECT CONCAT(UPPER(SUBSTRING(first_name, 1, 1)), LOWER(SUBSTRING(first_name FROM 2))) AS first_name, CONCAT(UPPER(SUBSTRING(last_name, 1, 1)), LOWER(SUBSTRING(last_name FROM 2))) AS last_name FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${first_name} ${last_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>patient_nameL</ap-name>
        <ap-sql>SELECT last_name FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${last_name}</ap-output>
        <ap-insql>UPDATE demographic SET last_name='${value}' WHERE demographic_no=${demographic}</ap-insql>
        <archive>demographic</archive>
    </databaseap>
    <databaseap>
        <ap-name>patient_nameF</ap-name>
        <ap-sql>SELECT first_name FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${first_name}</ap-output>
        <ap-insql>UPDATE demographic SET first_name='${value}' WHERE demographic_no=${demographic}</ap-insql>
        <archive>demographic</archive>
    </databaseap>
    <databaseap>
        <ap-name>patient_id</ap-name>
        <ap-sql>SELECT '${demographic}' AS id</ap-sql>
        <ap-output>${id}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>label</ap-name>
        <ap-sql>SELECT * FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${last_name}, ${first_name}\n${address}, ${city}, ${province} ${postal}\nTel:${phone}(H)  ${phone2}(W)\n${date_of_birth}/${month_of_birth}/${year_of_birth}(${sex})  HIN:${hin}${ver}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>address</ap-name>
        <ap-sql>SELECT * FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${address}\n${city}, ${province}, ${postal}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>addressline</ap-name>
        <ap-sql>SELECT address, city, province, postal FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${address}, ${city}, ${province}, ${postal}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>address_street_number_and_name</ap-name>
        <ap-sql>SELECT address, city, province, postal FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${address}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>province</ap-name>
        <ap-sql>SELECT province FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${province}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>city</ap-name>
        <ap-sql>SELECT city FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${city}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>postal</ap-name>
        <ap-sql>SELECT postal FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${postal}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>dob</ap-name>
        <ap-sql>SELECT date_of_birth, month_of_birth, year_of_birth FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${date_of_birth}/${month_of_birth}/${year_of_birth} (d/m/y)</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>dobc</ap-name>
        <ap-sql>SELECT date_of_birth, month_of_birth, year_of_birth FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${date_of_birth}/${month_of_birth}/${year_of_birth}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>dobc2</ap-name>
        <ap-sql>SELECT date_of_birth, month_of_birth, year_of_birth FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${year_of_birth}/${month_of_birth}/${date_of_birth}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>dobc3</ap-name>
        <ap-sql>SELECT date_of_birth, MONTHNAME(STR_TO_DATE(month_of_birth, '%m')) AS month_of_birth_full, year_of_birth FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${month_of_birth_full} ${date_of_birth}, ${year_of_birth}</ap-output>
    </databaseap>
     <databaseap>
        <ap-name>dob_year</ap-name>
        <ap-sql>SELECT year_of_birth FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${year_of_birth}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>dob_month</ap-name>
        <ap-sql>SELECT month_of_birth FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${month_of_birth}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>dob_day</ap-name>
        <ap-sql>SELECT date_of_birth FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${date_of_birth}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>NameAddress</ap-name>
        <ap-sql>SELECT * FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${last_name}, ${first_name}\n${address}\n${city},${province} ${postal}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>hin</ap-name>
        <ap-sql>SELECT hin, ver FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${hin} ${ver}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>hinc</ap-name>
        <ap-sql>SELECT hin FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${hin}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>hinversion</ap-name>
        <ap-sql>SELECT ver FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${ver}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>hc_renew_date</ap-name>
        <ap-sql>SELECT hc_renew_date FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${hc_renew_date}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>chartno</ap-name>
        <ap-sql>SELECT chart_no FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${chart_no}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>phone</ap-name>
        <ap-sql>SELECT phone FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${phone}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>phone2</ap-name>
        <ap-sql>SELECT phone2 FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${phone2}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>cell</ap-name>
        <ap-sql>SELECT value FROM demographicExt WHERE demographic_no=${demographic} and key_val ='demo_cell';</ap-sql>
        <ap-output>${value}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>phone_extension</ap-name>
        <ap-sql>SELECT value FROM demographicExt WHERE demographic_no=${demographic} and key_val ='hPhoneExt';</ap-sql>
        <ap-output>${value}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>phone2_extension</ap-name>
        <ap-sql>SELECT value FROM demographicExt WHERE demographic_no=${demographic} and key_val ='wPhoneExt';</ap-sql>
        <ap-output>${value}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>age</ap-name>
        <ap-sql>SELECT (YEAR(CURRENT_DATE)-YEAR(DATE_FORMAT(CONCAT((demographic.year_of_birth), '-', (demographic.month_of_birth), '-', (demographic.date_of_birth)),'%Y-%m-%d')))-(RIGHT(CURRENT_DATE, 5) &lt; RIGHT(DATE_FORMAT(CONCAT((demographic.year_of_birth), '-', (demographic.month_of_birth), '-', (demographic.date_of_birth)),'%Y-%m-%d'),5)) AS 'age' FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${age}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>ageComplex</ap-name>
        <ap-sql>SELECT (IF ( (YEAR(CURRENT_DATE) - YEAR(@bdate))&lt; 3,
                (IF ( (((YEAR(CURRENT_DATE) - 1) * 12 + MONTH(CURRENT_DATE)) - ((YEAR(@bdate) - 1) * 12 + MONTH(@bdate))) - (MID(@bdate, 9, 2) &lt;  MID(@bdate, 9, 2))&lt; 3,
                (IF ( FLOOR((TO_DAYS(CURRENT_DATE) - TO_DAYS(@bdate))/7)&lt; 5,
                (IF ( (TO_DAYS(CURRENT_DATE) - TO_DAYS(@bdate))&lt; 2,
                'newborn', CONCAT((TO_DAYS(CURRENT_DATE) - TO_DAYS(@bdate)),' day old'))), CONCAT(FLOOR((TO_DAYS(CURRENT_DATE) - TO_DAYS(@bdate))/7),' week old'))), CONCAT((((YEAR(CURRENT_DATE) - 1) * 12 + MONTH(CURRENT_DATE)) - ((YEAR(@bdate) - 1) * 12 + MONTH(@bdate))) - (MID(@bdate, 9, 2) &lt;  MID(@bdate, 9, 2)),' month old'))), CONCAT((YEAR(CURRENT_DATE) - YEAR(@bdate)) - (MID(CURRENT_DATE, 6, 5) &lt;  MID(CURRENT_DATE, 6, 5)),' year old'))) as ageComplex from (SELECT @bdate:=
                DATE_FORMAT(CONCAT((demographic.year_of_birth), '-', (demographic.month_of_birth), '-', (demographic.date_of_birth)),'%Y-%m-%d') AS birthdate FROM demographic WHERE demographic_no=${demographic}) as t</ap-sql>
        <ap-output>${ageComplex}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>ageComplex2</ap-name>
        <ap-sql>SELECT (IF ( (TO_DAYS(CURRENT_DATE) - TO_DAYS(@bdate))&lt; 365,<!--IF  Less than one year Old -->
                          (IF ((TO_DAYS(CURRENT_DATE)-TO_DAYS(@bdate))&lt; 31,<!-- {IF less than 31 days old -->
                            CONCAT((TO_DAYS(CURRENT_DATE)-TO_DAYS(@bdate)), ' days old'),<!-- {Print Age in Days} -->
                            (IF ((DAY(CURRENT_DATE)-DAY(@bdate))&lt;0,<!-- ELSE { print in  months and week}} -->
                               CONCAT((((YEAR(CURRENT_DATE) - 1) * 12 + MONTH(CURRENT_DATE)-1) - ((YEAR(@bdate) - 1) * 12 + MONTH(@bdate))) - (MID(@bdate, 9, 2) &lt;  MID(@bdate, 9, 2)),' months ',FLOOR((DAY(CURRENT_DATE)/7)),' weeks old'),
                                CONCAT((((YEAR(CURRENT_DATE) - 1) * 12 + MONTH(CURRENT_DATE)) - ((YEAR(@bdate) - 1) * 12 + MONTH(@bdate))) - (MID(@bdate, 9, 2) &lt;  MID(@bdate, 9, 2)),' month old ',FLOOR(((DAY(CURRENT_DATE)-DAY(@bdate))/7)),' weeks old'))))),
                            CONCAT(TIMESTAMPDIFF(YEAR,@bdate,CURRENT_DATE)," years ",MOD(TIMESTAMPDIFF(MONTH,@bdate,CURRENT_DATE),12)," Months"))) as ageComplex2 from (SELECT @bdate:=
                DATE_FORMAT(CONCAT((demographic.year_of_birth), '-', (demographic.month_of_birth), '-', (demographic.date_of_birth)),'%Y-%m-%d') AS birthdate FROM demographic WHERE demographic_no=${demographic}) as t</ap-sql>
        <ap-output>${ageComplex2}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>sex</ap-name>
        <ap-sql>SELECT sex FROM demographic WHERE demographic_no=${demographic}</ap-sql>
        <ap-output>${sex}</ap-output>
    </databaseap>

<!-- Patient medical information -->
    <databaseap>
        <ap-name>social_family_history</ap-name>
        <ap-sql>SELECT socialHistory FROM eChart WHERE demographicNo=${demographic} ORDER BY eChartId DESC limit 1</ap-sql>
        <ap-output>${socialHistory}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>other_medications_history</ap-name>
        <ap-sql>SELECT familyHistory FROM eChart WHERE demographicNo=${demographic} ORDER BY eChartId DESC limit 1</ap-sql>
        <ap-output>${familyHistory}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>medical_history</ap-name>
        <ap-sql>SELECT medicalHistory FROM eChart WHERE demographicNo=${demographic} ORDER BY eChartId DESC limit 1</ap-sql>
        <ap-output>${medicalHistory}</ap-output>
    </databaseap>
    <databaseap>
    	<ap-name>dxregistry</ap-name>
    	<ap-sql>SELECT GROUP_CONCAT(icd9.description SEPARATOR ', ') AS dxlist FROM icd9, dxresearch WHERE status='A' AND coding_system='icd9' AND icd9.icd9=dxresearch.dxresearch_code AND demographic_no=${demographic};</ap-sql>
    	<ap-output>${dxlist}</ap-output></databaseap>
    <databaseap>
    	<ap-name>OHIPdxCode</ap-name>

    	<ap-sql>SELECT GROUP_CONCAT(DISTINCT billing_on_item.dx) AS ohipdxc FROM billing_on_item, billing_on_cheader1 WHERE billing_on_cheader1.id=billing_on_item.ch1_id AND billing_on_cheader1.demographic_no=${demographic};</ap-sql>
    	<ap-output>${ohipdxc}</ap-output></databaseap>
    <databaseap>
        <ap-name>ongoingconcerns</ap-name>
        <ap-sql>SELECT ongoingConcerns FROM eChart WHERE demographicNo=${demographic} ORDER BY eChartId DESC limit 1</ap-sql>
        <ap-output>${ongoingConcerns}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>reminders</ap-name>
        <ap-sql>SELECT reminders FROM eChart WHERE demographicNo=${demographic} ORDER BY eChartId DESC limit 1</ap-sql>
        <ap-output>${reminders}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>allergies_des</ap-name>
        <ap-sql>SELECT IF ((SELECT COUNT(*) FROM allergies, demographic	WHERE ( demographic.demographic_no=${demographic} AND allergies.demographic_no=demographic.demographic_no AND allergies.archived=1))>0,
			CONCAT((SELECT GROUP_CONCAT(allergies.DESCRIPTION SEPARATOR ', ') FROM allergies, demographic WHERE demographic.demographic_no=${demographic} AND allergies.demographic_no=demographic.demographic_no AND allergies.archived != 1),' \n','archived allergies:',(SELECT GROUP_CONCAT(allergies.DESCRIPTION SEPARATOR ', ') FROM allergies, demographic WHERE demographic.demographic_no=${demographic} AND allergies.demographic_no=demographic.demographic_no AND allergies.archived = 1)),
			(SELECT GROUP_CONCAT(allergies.DESCRIPTION SEPARATOR ', ') FROM allergies, demographic WHERE demographic.demographic_no=${demographic} AND allergies.demographic_no=demographic.demographic_no AND allergies.archived != 1))
			as allergy</ap-sql>
		<ap-output>${allergy}</ap-output>
    </databaseap>
    <databaseap>
		<ap-name>allergies_des_no_archived</ap-name>
		<ap-sql>SELECT GROUP_CONCAT(allergies.DESCRIPTION SEPARATOR ', ')as allergy FROM allergies, demographic
				WHERE demographic.demographic_no=${demographic} AND allergies.demographic_no=demographic.demographic_no AND allergies.archived != 1</ap-sql>
		<ap-output>${allergy}</ap-output>
	</databaseap>
    <databaseap>
        <ap-name>recent_rx</ap-name>
        <ap-sql>SELECT GROUP_CONCAT(CONCAT(p.date_prescribed,' ',SUBSTRING_INDEX(p.textView, '\n\n', -1)),'\n' ORDER BY p.date_prescribed DESC SEPARATOR '') AS rx FROM prescription p WHERE p.demographic_no=${demographic} </ap-sql>
        <ap-output>${rx}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>today_rx</ap-name>
        <ap-sql>SELECT GROUP_CONCAT(CONCAT(p.date_prescribed,' ',SUBSTRING_INDEX(p.textView, '\n\n', -1)),'\n' ORDER BY p.date_prescribed DESC SEPARATOR '') AS rx FROM prescription p WHERE p.demographic_no=${demographic} and p.date_prescribed=LEFT(now(),10) </ap-sql>
        <ap-output>${rx}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>druglist_generic</ap-name>
        <ap-sql>SELECT GROUP_CONCAT(DISTINCT if(LENGTH(d.GN) &gt; 4, GN, d.customName) , if(d.takemax &gt; d.takemin, CONCAT(' ',d.takemin,'-',d.takemax,' '), CONCAT(' ',d.takemin,' ')) , d.freqcode , if(d.prn=1,' prn','') ORDER BY d.rx_date DESC SEPARATOR '\n' ) AS rxgen
                FROM drugs d WHERE d.demographic_no=${demographic} AND d.end_date &gt; DATE_ADD(CURDATE(), INTERVAL -1 WEEK);</ap-sql>
        <ap-output>${rxgen}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>druglist_trade</ap-name>
        <ap-sql>SELECT GROUP_CONCAT(DISTINCT if(LENGTH(d.GN) &gt; 4, BN, d.customName) , if(d.takemax &gt; d.takemin, CONCAT(' ',d.takemin,'-',d.takemax,' '), CONCAT(' ',d.takemin,' ')) , d.freqcode , if(d.prn=1,' prn','') ORDER BY d.rx_date DESC SEPARATOR '\n' ) AS rxlist
                FROM drugs d WHERE d.demographic_no=${demographic} AND d.end_date &gt; DATE_ADD(CURDATE(), INTERVAL -1 WEEK);</ap-sql>
        <ap-output>${rxlist}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>druglist_line</ap-name>
        <ap-sql>SELECT GROUP_CONCAT(DISTINCT if(LENGTH(d.GN) &gt; 4, CONCAT(UCASE(SUBSTRING(d.BN, 1, 1)),LOWER(SUBSTRING(d.BN, 2))), d.customName) , IF(d.takemax &gt; d.takemin, CONCAT(' ',d.takemin,'-',d.takemax,' '), CONCAT(' ',d.takemin,' ')) , d.freqcode , IF(d.prn=1,' prn','') ORDER BY d.rx_date DESC SEPARATOR ', ' ) AS rxlist
                FROM drugs d WHERE d.demographic_no=${demographic} AND d.end_date &gt; DATE_ADD(CURDATE(), INTERVAL -1 WEEK);</ap-sql>
        <ap-output>${rxlist}</ap-output>
    </databaseap>

<!-- Doctor information -->
    <databaseap>
        <ap-name>doctor</ap-name>
        <ap-sql>SELECT provider.first_name, provider.last_name  FROM provider, demographic WHERE demographic.demographic_no=${demographic} AND demographic.provider_no=provider.provider_no</ap-sql>
        <ap-output>${last_name}, ${first_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>doctor_ohip_no</ap-name>
        <ap-sql>SELECT provider.ohip_no FROM provider, demographic WHERE demographic.demographic_no=${demographic} AND demographic.provider_no=provider.provider_no</ap-sql>
        <ap-output>${ohip_no}</ap-output>
    </databaseap>
     <databaseap>
        <ap-name>doctor_specialty_code</ap-name>
        <ap-sql>SELECT
                 MID( p.comments,
                       INSTR(p.comments,'&lt;xml_p_specialty_code&gt;')+22,
                       INSTR(p.comments,'&lt;/xml_p_specialty_code&gt;')-INSTR(p.comments,'&lt;xml_p_specialty_code&gt;')-22
                 ) AS specialty_code
               FROM provider p, demographic d
               WHERE d.demographic_no=${demographic} AND d.provider_no=p.provider_no</ap-sql>
        <ap-output>${specialty_code}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>doctor_cpsid</ap-name>
        <ap-sql>SELECT provider.practitionerNo FROM provider, demographic
                WHERE demographic.demographic_no=${demographic} AND demographic.provider_no=provider.provider_no</ap-sql>
        <ap-output>${practitionerNo}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>provider_name</ap-name>
        <ap-sql>SELECT provider.last_name, provider.first_name FROM provider, demographic
                WHERE demographic_no=${demographic} AND demographic.provider_no=provider.provider_no</ap-sql>
        <ap-output>${last_name}, ${first_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>provider_name_first_init</ap-name>
        <ap-sql>select  substring(provider.first_name,1,1) as first_init,provider.last_name FROM provider, demographic
                WHERE demographic_no=${demographic} AND demographic.provider_no=provider.provider_no</ap-sql>
        <ap-output>${first_init}. ${last_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>doctor_work_phone</ap-name>
        <ap-sql>SELECT provider.work_phone FROM provider, demographic
                WHERE demographic.demographic_no=${demographic} AND demographic.provider_no=provider.provider_no</ap-sql>
        <ap-output>${work_phone}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>referral_name</ap-name>
		<ap-sql>
			SELECT br.last_name, br.first_name
			from (
			select ExtractValue(family_doctor, '//rd') as original_name,
			ExtractValue(family_doctor, '//rdohip') as doctor_no,
			IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
			from demographic
			where demographic_no = ${demographic}
			) as q
			left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
			and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
        <ap-output>${last_name}, ${first_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>referral_fullname</ap-name>
        <ap-sql>
            SELECT br.last_name, br.first_name
            from (
            select ExtractValue(family_doctor, '//rd') as original_name,
            ExtractValue(family_doctor, '//rdohip') as doctor_no,
            IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
            from demographic
            where demographic_no = ${demographic}
            ) as q
            left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
            and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
        <ap-output>${first_name} ${last_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>referral_last_name</ap-name>
		<ap-sql>
			SELECT br.last_name
			from (
			select ExtractValue(family_doctor, '//rd') as original_name,
			ExtractValue(family_doctor, '//rdohip') as doctor_no,
			IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
			from demographic
			where demographic_no = ${demographic}
			) as q
			left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
			and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
        <ap-output>${last_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>referral_address</ap-name>
		<ap-sql>
            SELECT  CONCAT(
            	if(br.address1 is not null, br.address1, ''),
            	if(length(br.address2) > 0 and br.address2 is not null,concat(', ',br.address2),''),
            	if(br.city is not null,concat(', ',br.city),''),
            	if(br.province is not null,concat(', ',br.province),''),
            	if(br.country is not null,concat(', ',br.country),''),
            	if(br.postal is not null,concat(', ',br.postal),'')) AS raddress
            from (
            select ExtractValue(family_doctor, '//rd') as original_name,
            ExtractValue(family_doctor, '//rdohip') as doctor_no,
            IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
            from demographic
            where demographic_no = ${demographic}
            ) as q
            left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
            and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
                <ap-output>${raddress}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>referral_addressline</ap-name>
        <ap-sql>
            SELECT CONCAT(br.address1,if(length(br.address2) > 0 and br.address2 is not null,concat(', ',br.address2),'')) AS raddressline
            from (
            select ExtractValue(family_doctor, '//rd') as original_name,
            ExtractValue(family_doctor, '//rdohip') as doctor_no,
            IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
            from demographic
            where demographic_no = ${demographic}
            ) as q
            left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
            and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
                <ap-output>${raddressline}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>referral_cityprovpost</ap-name>
        <ap-sql>
            SELECT  CONCAT(br.city, ', ', br.province, ' ', br.postal) AS raddresscityprovpost
            from (
            select ExtractValue(family_doctor, '//rd') as original_name,
            ExtractValue(family_doctor, '//rdohip') as doctor_no,
            IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
            from demographic
            where demographic_no = ${demographic}
            ) as q
            left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
            and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
                <ap-output>${raddresscityprovpost}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>referral_phone</ap-name>
		<ap-sql>
            SELECT  br.phone
            from (
            select ExtractValue(family_doctor, '//rd') as original_name,
            ExtractValue(family_doctor, '//rdohip') as doctor_no,
            IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
            from demographic
            where demographic_no = ${demographic}
            ) as q
            left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
            and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
        <ap-output>${phone}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>referral_fax</ap-name>
		<ap-sql>
            SELECT  br.fax
            from (
            select ExtractValue(family_doctor, '//rd') as original_name,
            ExtractValue(family_doctor, '//rdohip') as doctor_no,
            IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
            from demographic
            where demographic_no = ${demographic}
            ) as q
            left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
            and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
        <ap-output>${fax}</ap-output>
    </databaseap>
    <databaseap>
		<ap-name>referral_no</ap-name>
		<ap-sql>
            SELECT  br.referral_no
            from (
            select ExtractValue(family_doctor, '//rd') as original_name,
            ExtractValue(family_doctor, '//rdohip') as doctor_no,
            IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', trim(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
            from demographic
            where demographic_no = ${demographic}
            ) as q
            left join billingreferral br ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = br.referral_no, coalesce(lcase(substr(br.first_name,1,1)) = lcase(substr(if(locate(' ', q.full_name) != 0, substring_index(q.full_name, ' ', 1), null),1,1)), true)
            and lcase(br.last_name) = lcase(substring_index(q.full_name, ' ', -1))) group by 1 having COUNT(*) = 1</ap-sql>
		<ap-output>${referral_no}</ap-output>
	</databaseap>
    <databaseap>
        <ap-name>appt_provider_name</ap-name>
        <ap-sql>SELECT p.last_name, p.first_name FROM provider p, appointment a
                WHERE p.provider_no=a.provider_no AND a.appointment_no=${appt_no}</ap-sql>
        <ap-output>${last_name}, ${first_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>appt_provider_id</ap-name>
        <ap-sql>SELECT provider_no FROM appointment WHERE appointment_no=${appt_no}</ap-sql>
        <ap-output>${provider_no}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>appt_no</ap-name>
        <ap-sql>SELECT ${appt_no} as appt_no</ap-sql>
        <ap-output>${appt_no}</ap-output>
    </databaseap>

<!-- Clinic information -->
    <databaseap>
        <ap-name>clinic_name</ap-name>
        <ap-sql>SELECT clinic_name FROM clinic</ap-sql>
        <ap-output>${clinic_name}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_phone</ap-name>
        <ap-sql>SELECT clinic_phone FROM clinic</ap-sql>
        <ap-output>${clinic_phone}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_fax</ap-name>
        <ap-sql>SELECT clinic_fax FROM clinic</ap-sql>
        <ap-output>${clinic_fax}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_label</ap-name>
        <ap-sql>SELECT * FROM clinic</ap-sql>
        <ap-output>${clinic_name}\n${clinic_address}\n${clinic_city},${clinic_province},${clinic_postal}\nTel:${clinic_phone}\nFax:${clinic_fax}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_addressLine</ap-name>
        <ap-sql>SELECT clinic_address FROM clinic</ap-sql>
        <ap-output>${clinic_address}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_addressLineFull</ap-name>
        <ap-sql>SELECT * FROM clinic</ap-sql>
        <ap-output>${clinic_address}, ${clinic_city}, ${clinic_province}, ${clinic_postal}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_address</ap-name>
        <ap-sql>SELECT * FROM clinic</ap-sql>
        <ap-output>${clinic_address}\n${clinic_city},${clinic_postal}\n${clinic_province},Canada</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_city</ap-name>
        <ap-sql>SELECT * FROM clinic</ap-sql>
        <ap-output>${clinic_city}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_province</ap-name>
        <ap-sql>SELECT * FROM clinic</ap-sql>
        <ap-output>${clinic_province}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>clinic_postal</ap-name>
        <ap-sql>SELECT * FROM clinic</ap-sql>
        <ap-output>${clinic_postal}</ap-output>
    </databaseap>

<!-- Extended eform tags, cannot be directly called -->
    <databaseap>
        <ap-name>_eform_values_first</ap-name>
        <ap-sql>SELECT var_value FROM eform_values WHERE var_name='${var_name}' AND fid=${fid}
                AND demographic_no like '${eform_demographic}'
                AND fdid IN (SELECT fdid FROM eform_data WHERE status=1) ORDER BY id+0 LIMIT 1</ap-sql>
        <ap-output>${var_value}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>_eform_values_last</ap-name>
        <ap-sql>SELECT var_value FROM eform_values WHERE var_name='${var_name}' AND fid=${fid}
                AND demographic_no like '${eform_demographic}'
                AND fdid IN (SELECT fdid FROM eform_data WHERE status=1) ORDER BY id+0 DESC LIMIT 1</ap-sql>
        <ap-output>${var_value}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>_eform_values_count</ap-name>
        <ap-sql>SELECT count(0) FROM eform_values WHERE var_name='${var_name}' AND var_value='${var_value}'
                AND demographic_no like '${eform_demographic}'
                AND fid=${fid} AND fdid IN (SELECT fdid FROM eform_data WHERE status=1)</ap-sql>
        <ap-output>${count(0)}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>_eform_values_countname</ap-name>
        <ap-sql>SELECT count(0) FROM eform_values WHERE var_name='${var_name}' AND NOT (var_value='' OR var_value IS NULL)
                AND demographic_no like '${eform_demographic}'
                AND fid=${fid} AND fdid IN (SELECT fdid FROM eform_data WHERE status=1)</ap-sql>
        <ap-output>${count(0)}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>_eform_values_count_ref</ap-name>
        <ap-sql>SELECT count(0) FROM eform_values WHERE var_name='${var_name}' AND var_value='${var_value}'
                AND fdid IN (SELECT fdid FROM eform_data WHERE status=1
                AND fdid IN (SELECT fdid FROM eform_values WHERE var_name='${ref_var_name}' AND var_value='${ref_var_value}'
                AND fid=${fid}))</ap-sql>
        <ap-output>${count(0)}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>_eform_values_countname_ref</ap-name>
        <ap-sql>SELECT count(0) FROM eform_values WHERE var_name='${var_name}' AND NOT (var_value='' OR var_value IS NULL)
                AND fdid IN (SELECT fdid FROM eform_data WHERE status=1
                AND fdid IN (SELECT fdid FROM eform_values WHERE var_name='${ref_var_name}' AND var_value='${ref_var_value}'
                AND fid=${fid}))</ap-sql>
        <ap-output>${count(0)}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>_eform_values_count_refname</ap-name>
        <ap-sql>SELECT count(0) FROM eform_values WHERE var_name='${var_name}' AND var_value='${var_value}'
                AND fdid IN (SELECT fdid FROM eform_data WHERE status=1
                AND fdid IN (SELECT fdid FROM eform_values WHERE fid=${fid}
                AND var_name='${ref_var_name}' AND NOT (var_value='' OR var_value IS NULL)))</ap-sql>
        <ap-output>${count(0)}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>_eform_values_countname_refname</ap-name>
        <ap-sql>SELECT count(0) FROM eform_values WHERE var_name='${var_name}' AND NOT (var_value='' OR var_value IS NULL)
                AND fdid IN (SELECT fdid FROM eform_data WHERE status=1
                AND fdid IN (SELECT fdid FROM eform_values WHERE fid=${fid}
                AND var_name='${ref_var_name}' AND NOT (var_value='' OR var_value IS NULL)))</ap-sql>
        <ap-output>${count(0)}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>_other_id</ap-name>
        <ap-sql>SELECT other_id FROM other_id WHERE table_name=${table_name} AND table_id=${table_id}
                AND other_key='${other_key}' AND deleted=false ORDER BY id DESC LIMIT 1</ap-sql>
        <ap-output>${other_id}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>dtap_immunization_date</ap-name>
        <ap-sql>select prevention_date from preventions p where p.prevention_type = 'dtap-ipv-hib' and p.deleted = '0' and p.demographic_no = ${demographic} order by p.prevention_date desc limit 1
       </ap-sql>
        <ap-output>${prevention_date}</ap-output>
    </databaseap>

     <databaseap>
        <ap-name>flu_immunization_date</ap-name>
        <ap-sql>select prevention_date from preventions p where p.prevention_type = 'Flu' and p.deleted = '0' and p.demographic_no = ${demographic} order by p.prevention_date desc limit 1
       </ap-sql>
        <ap-output>${prevention_date}</ap-output>
    </databaseap>

    <databaseap>
        <ap-name>fobt_immunization_date</ap-name>
        <ap-sql>select prevention_date from preventions p where p.prevention_type = 'FOBT' and p.deleted = '0' and p.demographic_no = ${demographic} order by p.prevention_date desc limit 1
       </ap-sql>
        <ap-output>${prevention_date}</ap-output>
    </databaseap>

    <databaseap>
        <ap-name>mammogram_immunization_date</ap-name>
        <ap-sql>select prevention_date from preventions p where p.prevention_type = 'MAM' and p.deleted = '0' and p.demographic_no = ${demographic} order by p.prevention_date desc limit 1
       </ap-sql>
        <ap-output>${prevention_date}</ap-output>
    </databaseap>

    <databaseap>
        <ap-name>pap_immunization_date</ap-name>
        <ap-sql>select prevention_date from preventions p where p.prevention_type = 'PAP' and p.deleted = '0' and p.demographic_no = ${demographic} order by p.prevention_date desc limit 1
       </ap-sql>
        <ap-output>${prevention_date}</ap-output>
    </databaseap>

    <databaseap>
    	<ap-name>guardian_label</ap-name>
        <ap-sql>select d.first_name, d.last_name, d.address, d.city, d.province, d.postal from relationships r, demographic d where r.relation_demographic_no = d.demographic_no and r.demographic_no = ${demographic}
        </ap-sql>
        <ap-output>${first_name} ${last_name}\n${address}\n${city} ${province}\n${postal}</ap-output>
    </databaseap>
    <databaseap>
    	<ap-name>guardian_label2</ap-name>
        <ap-sql>select d.first_name, d.last_name, d.address, d.city, d.province, d.postal from DemographicContact r, demographic d where r.contactId = d.demographic_no and r.sdm = 'true' and r.demographicNo =  ${demographic}
        </ap-sql>
        <ap-output>${first_name} ${last_name}\n${address}\n${city} ${province}\n${postal}</ap-output>
    </databaseap>

<!--Professional Specalists as referral doctors -->
    <databaseap>
        <ap-name>ps_referral_name</ap-name>
		<ap-sql>
			SELECT ps.lName, ps.fName
				  FROM (
				  SELECT ExtractValue(family_doctor, '//rd') AS original_name,
				  ExtractValue(family_doctor, '//rdohip') AS doctor_no,
				  IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
				  ) as q
			LEFT JOIN professionalSpecialists ps ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = ps.referralNo, coalesce(LCASE(substr(ps.fName,1,1)) = LCASE(substr(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
        <ap-output>${lName}, ${fName}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>ps_referral_last_name</ap-name>
		<ap-sql>
			SELECT ps.lName
				  FROM (
				  SELECT ExtractValue(family_doctor, '//rd') AS original_name,
				  ExtractValue(family_doctor, '//rdohip') AS doctor_no,
				  IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
				  ) as q
			LEFT JOIN professionalSpecialists ps ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = ps.referralNo, coalesce(LCASE(substr(ps.fName,1,1)) = LCASE(substr(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
        <ap-output>${lName}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>ps_referral_address</ap-name>
		<ap-sql>
			SELECT ps.address AS raddress FROM
			(
				SELECT ExtractValue(family_doctor, '//rd') AS original_name,
				  ExtractValue(family_doctor, '//rdohip') AS doctor_no,
				  IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
			) as q LEFT JOIN professionalSpecialists ps ON if(q.doctor_no IS NOT NULL AND q.doctor_no > 0, q.doctor_no = ps.referralNo, COALESCE(LCASE(substr(ps.fName,1,1)) = LCASE(SUBSTR(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
                <ap-output>${raddress}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>ps_referral_phone</ap-name>
		<ap-sql>
			SELECT ps.phone FROM (
				  SELECT ExtractValue(family_doctor, '//rd') AS original_name,
				  ExtractValue(family_doctor, '//rdohip') AS doctor_no,
				  IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', TRIM(SUBSTR(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
			) as q LEFT JOIN professionalSpecialists ps ON if(q.doctor_no IS NOT NULL and q.doctor_no > 0, q.doctor_no = ps.referralNo, COALESCE(LCASE(SUBSTR(ps.fName,1,1)) = LCASE(SUBSTR(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
        <ap-output>${phone}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>ps_referral_fax</ap-name>
		<ap-sql>
			SELECT ps.fax FROM (
				SELECT ExtractValue(family_doctor, '//rd') AS original_name,
					  ExtractValue(family_doctor, '//rdohip') AS doctor_no,
					  IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', TRIM(SUBSTR(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
					  FROM demographic
					  WHERE demographic_no = ${demographic}
            ) as q LEFT JOIN professionalSpecialists ps ON if(q.doctor_no IS NOT NULL and q.doctor_no > 0, q.doctor_no = ps.referralNo, COALESCE(LCASE(SUBSTR(ps.fName,1,1)) = LCASE(SUBSTR(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
        <ap-output>${fax}</ap-output>
    </databaseap>
    <databaseap>
		<ap-name>ps_referral_no</ap-name>
		<ap-sql>
			SELECT ps.referralNo FROM (
				SELECT ExtractValue(family_doctor, '//rd') AS original_name,
					  ExtractValue(family_doctor, '//rdohip') AS doctor_no,
					  IF(ExtractValue(family_doctor, '//rd') regexp '^Dr.', TRIM(SUBSTR(ExtractValue(family_doctor, '//rd') from 4)), ExtractValue(family_doctor, '//rd') ) as full_name
					  FROM demographic
					  WHERE demographic_no = ${demographic}
            ) as q LEFT JOIN professionalSpecialists ps ON if(q.doctor_no IS NOT NULL and q.doctor_no > 0, q.doctor_no = ps.referralNo, COALESCE(LCASE(SUBSTR(ps.fName,1,1)) = LCASE(SUBSTR(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
		<ap-output>${referralNo}</ap-output>
	</databaseap>
	<!-- family doctor -->
    <databaseap>
        <ap-name>family_doctor_name</ap-name>
		<ap-sql>
			SELECT ps.lName, ps.fName
				  FROM (
				  SELECT ExtractValue(family_doctor_2, '//fdname') AS original_name,
				  ExtractValue(family_doctor_2, '//fd') AS doctor_no,
				  IF(ExtractValue(family_doctor_2, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor_2, '//rd') from 4)), ExtractValue(family_doctor_2, '//fdname') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
				  ) as q
			LEFT JOIN professionalSpecialists ps ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = ps.referralNo, coalesce(LCASE(substr(ps.fName,1,1)) = LCASE(substr(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
        <ap-output>${lName}, ${fName}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>family_doctor_last_name</ap-name>
		<ap-sql>
			SELECT ps.lName
				  FROM (
				  SELECT ExtractValue(family_doctor_2, '//fdname') AS original_name,
				  ExtractValue(family_doctor_2, '//fd') AS doctor_no,
				  IF(ExtractValue(family_doctor_2, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor_2, '//rd') from 4)), ExtractValue(family_doctor_2, '//fdname') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
				  ) as q
			LEFT JOIN professionalSpecialists ps ON if(q.doctor_no is not null and q.doctor_no > 0, q.doctor_no = ps.referralNo, coalesce(LCASE(substr(ps.fName,1,1)) = LCASE(substr(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
        <ap-output>${lName}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>family_doctor_address</ap-name>
		<ap-sql>
			SELECT ps.address AS raddress FROM
			(
				  SELECT ExtractValue(family_doctor_2, '//fdname') AS original_name,
				  ExtractValue(family_doctor_2, '//fd') AS doctor_no,
				  IF(ExtractValue(family_doctor_2, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor_2, '//rd') from 4)), ExtractValue(family_doctor_2, '//fdname') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
			) as q LEFT JOIN professionalSpecialists ps ON if(q.doctor_no IS NOT NULL AND q.doctor_no > 0, q.doctor_no = ps.referralNo, COALESCE(LCASE(substr(ps.fName,1,1)) = LCASE(SUBSTR(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
                <ap-output>${raddress}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>family_doctor_phone</ap-name>
		<ap-sql>
			SELECT ps.phone FROM (
				  SELECT ExtractValue(family_doctor_2, '//fdname') AS original_name,
				  ExtractValue(family_doctor_2, '//fd') AS doctor_no,
				  IF(ExtractValue(family_doctor_2, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor_2, '//rd') from 4)), ExtractValue(family_doctor_2, '//fdname') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
			) as q LEFT JOIN professionalSpecialists ps ON if(q.doctor_no IS NOT NULL and q.doctor_no > 0, q.doctor_no = ps.referralNo, COALESCE(LCASE(SUBSTR(ps.fName,1,1)) = LCASE(SUBSTR(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
        <ap-output>${phone}</ap-output>
    </databaseap>
    <databaseap>
        <ap-name>family_doctor_fax</ap-name>
		<ap-sql>
			SELECT ps.fax FROM (
				  SELECT ExtractValue(family_doctor_2, '//fdname') AS original_name,
				  ExtractValue(family_doctor_2, '//fd') AS doctor_no,
				  IF(ExtractValue(family_doctor_2, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor_2, '//rd') from 4)), ExtractValue(family_doctor_2, '//fdname') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
            ) as q LEFT JOIN professionalSpecialists ps ON if(q.doctor_no IS NOT NULL and q.doctor_no > 0, q.doctor_no = ps.referralNo, COALESCE(LCASE(SUBSTR(ps.fName,1,1)) = LCASE(SUBSTR(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
        <ap-output>${fax}</ap-output>
    </databaseap>
    <databaseap>
		<ap-name>family_doctor_no</ap-name>
		<ap-sql>
			SELECT ps.referralNo FROM (
				  SELECT ExtractValue(family_doctor_2, '//fdname') AS original_name,
				  ExtractValue(family_doctor_2, '//fd') AS doctor_no,
				  IF(ExtractValue(family_doctor_2, '//rd') regexp '^Dr.', TRIM(substr(ExtractValue(family_doctor_2, '//rd') from 4)), ExtractValue(family_doctor_2, '//fdname') ) as full_name
				  FROM demographic
				  WHERE demographic_no = ${demographic}
            ) as q LEFT JOIN professionalSpecialists ps ON if(q.doctor_no IS NOT NULL and q.doctor_no > 0, q.doctor_no = ps.referralNo, COALESCE(LCASE(SUBSTR(ps.fName,1,1)) = LCASE(SUBSTR(if(locate(' ', q.full_name) != 0, SUBSTRING_INDEX(q.full_name, ' ', 1), null),1,1)), true) and LCASE(ps.lName) = LCASE(substring_index(q.full_name, ' ', -1))) GROUP BY 1 HAVING COUNT(*) = 1
		</ap-sql>
		<ap-output>${referralNo}</ap-output>
	</databaseap>
	<!-- end family doctor -->

</eformap-config>

