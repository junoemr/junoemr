<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:cxf="http://cxf.apache.org/core"
	   xmlns:jaxws="http://cxf.apache.org/jaxws"
	   xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
		http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
		http://cxf.apache.org/jaxws	http://cxf.apache.org/schemas/jaxws.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd

	">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />


	<!-- ========================================================================================-->
	<!-- Settings for the external SOAP web services -->
	<!-- ========================================================================================-->

	<!-- interceptors -->
	<bean id="abstractLoggingInterceptor" abstract="true">
		<property name="prettyLogging" value="true" />
	</bean>
	<bean id="loggingInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" parent="abstractLoggingInterceptor" />
	<bean id="loggingOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor" parent="abstractLoggingInterceptor" />

	<!-- ========================================================================================-->
	<!-- Shared SOAP/REST bus-->
	<!-- ========================================================================================-->

	<cxf:bus>
		<cxf:properties>
			<entry key="ws-security.ut.validator" value="org.oscarehr.ws.OscarUsernameTokenValidator" />
			<!--
			  This property needs to be set 'true' in order to give preference to JacksonJsonProvider
			  over the default Jettison provider.
			-->
			<entry key="skip.default.json.provider.registration" value="true" />
		</cxf:properties>
	</cxf:bus>

	<!-- ========================================================================================-->
	<!-- Settings for the external SOAP web services -->
	<!-- ========================================================================================-->

	<!-- Managed WS Beans -->
	<!-- The WS classes are turned into spring beans to allow autowiring etc, then the endpoints reference them -->
	<context:component-scan base-package="org.oscarehr.ws.external.soap"/>

	<!-- Features -->
	<bean id="soapLoggingPackage" class="org.oscarehr.ws.external.soap.logging.SoapLoggingSuite"/>

	<!-- Interceptors are listed in lifecycle order -->
	<!-- Request interceptors -->
	<bean id="authenticationInWSS4JInterceptor" class="org.oscarehr.ws.AuthenticationInWSS4JInterceptor"/>
	<bean id="IPInWSS4JInterceptor" class="org.oscarehr.ws.IPInWSS4JInterceptor"/>

	<!-- Response interceptors -->
	<bean id="bornSOAPHeaderInterceptor" class="org.oscarehr.integration.born.BornSOAPHeaderInterceptor"/>

	<!-- web service endpoints -->
	<jaxws:endpoint implementor="#systemInfoWs" address="/SystemInfoService">
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#loginWs" address="/LoginService">
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#scheduleWs" address="/ScheduleService">
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#providerWs" address="/ProviderService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#demographicWs" address="/DemographicService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#userMetricsWs" address="/UserMetricsService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#facilityWs" address="/FacilityService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#programWs" address="/ProgramService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#allergyWs" address="/AllergyService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#dashboardWs" address="/DashboardService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#preventionWs" address="/PreventionService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#measurementWs" address="/MeasurementService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#documentWs" address="/DocumentService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#prescriptionWs" address="/PrescriptionService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#labUploadWs" address="/LabUploadService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="bornSOAPHeaderInterceptor"/>
		</jaxws:outInterceptors>
		<jaxws:features>
			<ref bean="soapLoggingPackage"/>
		</jaxws:features>
	</jaxws:endpoint>

	<!-- ========================================================================================-->
	<!-- Settings for the internal REST web services -->
	<!-- ========================================================================================-->

	<context:component-scan base-package="org.oscarehr.ws.rest"/>
	<context:component-scan base-package="org.oscarehr.ws.rest.util"/>
	<context:component-scan base-package="org.oscarehr.ws.rest.conversion"/>
	<aop:aspectj-autoproxy/>

	<!-- Also used by applicationContextREST.xml -->
	<bean id="jaxb" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider">
		<property name="singleJaxbContext" value="true"/>

		<property name="extraClass">
			<list>
				<value>org.oscarehr.ws.external.soap.v1.transfer.ProviderTransfer</value>
			</list>
		</property>
	</bean>

<!--	<bean id="restLoggingInInterceptor" class="org.oscarehr.ws.rest.util.RestLoggingInInterceptor" parent="abstractLoggingInterceptor"/>
	<bean id="restLoggingOutInterceptor" class="org.oscarehr.ws.rest.util.RestLoggingOutInterceptor" parent="abstractLoggingInterceptor"/>-->

	<bean id="validationProvider" class="org.apache.cxf.validation.BeanValidationProvider"/>

	<bean id="validationInInterceptor" class="org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor">
		<property name="provider" ref="validationProvider"/>
	</bean>

	<bean id="validationOutInterceptor" class="org.apache.cxf.jaxrs.validation.JAXRSBeanValidationOutInterceptor">
		<property name="provider" ref="validationProvider"/>
	</bean>

	<!-- RESTful web service  -->
	<jaxrs:server address="/rs" id="jaxrServer">

		<jaxrs:inInterceptors>
			<bean name="authInInterceptor" class="org.oscarehr.ws.rest.util.AuthenticationInInterceptor" />
			<ref bean="validationInInterceptor"/>
		</jaxrs:inInterceptors>

		<jaxrs:outInterceptors>
			<ref bean="validationOutInterceptor"/>
		</jaxrs:outInterceptors>

		<jaxrs:providers>
			<ref bean="jaxb"/>

			<!-- Switch to Jackson 2 from the cxf default of Jettison.  Also depends on the cxf -->
			<!-- bus setting "skip.default.json.provider.registration" which is set in -->
			<!-- spring_ws.xml -->
			<bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>

			<!-- Juno exception mappers.  Add more of these as new exceptions are thrown. -->
			<bean class="org.oscarehr.ws.rest.exceptionMapping.GeneralExceptionMapper"/>
			<bean class="org.oscarehr.ws.rest.exceptionMapping.InvalidFormatExceptionMapper"/>
			<bean class="org.oscarehr.ws.rest.exceptionMapping.JsonParseExceptionMapper"/>
			<bean class="org.oscarehr.ws.rest.exceptionMapping.MissingArgumentExceptionMapper"/>
			<bean class="org.oscarehr.ws.rest.exceptionMapping.RateLimitExceptionMapper"/>
			<bean class="org.oscarehr.ws.rest.exceptionMapping.SecurityExceptionMapper"/>
			<bean class="org.oscarehr.ws.rest.exceptionMapping.ConstraintViolationExceptionMapper"/>
			<bean class="org.oscarehr.ws.rest.exceptionMapping.ValidationExceptionMapper"/>

			<!-- Juno filters. -->
			<bean class="org.oscarehr.ws.rest.filter.LoggingFilterInternal"/>

			<!-- Custom ContextResolver to apply settings to the Jackson ObjectMapper -->
			<bean class="org.oscarehr.ws.spring.contextResolver.ObjectMapperContextResolver"/>
		</jaxrs:providers>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:serviceBeans>
			<!-- Alphabetically Please! -->
			<bean autowire="byName" class="org.oscarehr.ws.rest.AllergyService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.AppointmentService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.AppService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.BillingService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ConsultationWebService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.DemographicMergeService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.DemographicService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.DemographicsService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.DiseaseRegistryService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.EFormService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.EFormsService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.FaxAccountWebService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.FaxInboundWebService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.FaxOutboundWebService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.FormsService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.InboxService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.MessagingService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.NotesService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.OscarJobService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.PatientDetailStatusService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.PersonaService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.PharmacyService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.PreventionService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ProductDispensingService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ProgramService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ProviderService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ProviderPreferenceWebService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ProvidersService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.RecordUxService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ReferralDoctorsService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ReportByTemplateService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ReportingService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ResourceService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.RSSFeedService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.ScheduleService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.SitesService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.SpecialistsService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.StatusService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.SystemPreferenceWebService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.TicklerWebService"/>
			<bean autowire="byName" class="org.oscarehr.ws.rest.UserMetricsService"/>

			<!--  Not yet implemented

			<bean class="org.oscarehr.ws.rest.WaitListWebService" autowire="byName"/>
			
			-->
		</jaxrs:serviceBeans>

		<jaxrs:extensionMappings>
			<entry key="xml" value="application/xml" />
			<entry key="json" value="application/json" />
		</jaxrs:extensionMappings>
	</jaxrs:server>
</beans>
